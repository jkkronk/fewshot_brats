import numpy as np
from skimage.transform import resize
from sklearn.metrics import roc_auc_score
import pickle
import argparse
import yaml
import random
import torch
import torch.utils.data as data
import torch.optim as optim
from torch.utils.tensorboard import SummaryWriter
from restoration import train_run_map_implicit, train_run_map_explicit
from models.shallow_UNET import shallow_UNet
from models.covnet import ConvNet
from datasets import brats_dataset_subj

if __name__ == "__main__":
    # Params init
    parser = argparse.ArgumentParser()
    parser.add_argument('--name', type=str, default=0)
    parser.add_argument("--config", required=True, help="Path to config")
    parser.add_argument('--subjs', type=int, required=True, help="Number of subjects")
    parser.add_argument('--K_actf', type=int, default=1, help="Activation param")

    opt = parser.parse_args()
    name = opt.name
    subj_nbr = opt.subjs
    K_actf = opt.K_actf

    with open(opt.config) as f:
        config = yaml.safe_load(f)

    model_name = config['vae_name']
    data_path = config['path']
    riter = config['riter']
    batch_size = config["batch_size"]
    img_size = config["spatial_size"]
    lr_rate = float(config['lr_rate'])
    step_size = float(config['step_rate'])
    log_freq = config['log_freq']
    original_size = config['orig_size']
    log_dir = config['log_dir']
    n_latent_samples = config['latent_samples']
    epochs = config['epochs']

    validation = True

    print('Name: ', name, 'Lr_rate: ', lr_rate, ' Riter: ', riter, ' Step size: ', step_size, 'Kact:', K_actf)

    # Cuda
    device = torch.device("cuda:0" if torch.cuda.is_available() else "cpu")
    print('Using device: ' + str(device))

    # Load trained vae model
    vae_path = '/scratch_net/biwidl214/jonatank/logs/vae/'
    path = vae_path + model_name + '.pth'
    vae_model = torch.load(path, map_location=torch.device(device))
    vae_model.eval()

    # Create guiding net
    net = shallow_UNet(name, 2, 1, 4).to(device)
    #net = ConvNet(name, 2, 1, 32).to(device)
    #net = UNet(name, 2, 1, 4).to(device)

    #path = '/scratch_net/biwidl214/jonatank/logs/restore/1subj_1e1_1steps_2fch_2MSEloss_pretrain_aug_mask1.pth'
    #net = torch.load(path, map_location=torch.device(device))

    optimizer = optim.Adam(net.parameters(), lr=lr_rate)

    # Load list of subjects
    f = open(data_path + 'subj_t2_dict.pkl', 'rb')
    subj_dict = pickle.load(f)
    f.close()

    subj_list_all = list(subj_dict.keys())
    random.shuffle(subj_list_all)
    subj_list = subj_list_all[:subj_nbr]#['Brats17_CBICA_BFB_1_t2_unbiased.nii.gz'] #
    #if subj_nbr == 1:
    #    subj_list = ['Brats17_2013_14_1_t2_unbiased.nii.gz'] #5 Brats17_TCIA_451_1_t2_unbiased 4 Brats17_CBICA_AUN_1_t2_unbiased 3 Brats17_TCIA_105_1_t2_unbiased 2 Brats17_CBICA_AXW_1_t2_unbiased 1 Brats17_TCIA_241_1_t2_unbiased  0 Brats17_2013_14_1_t2_unbiased

    print(subj_list)

    slices = []
    for subj in subj_list:  # Iterate every subject
        slices.extend(subj_dict[subj])  # Slices for each subject

    if validation:
        random.shuffle(slices)
        train_slices = slices[:int((len(slices)*0.85))]
        valid_slices = slices[int((len(slices)*0.85)):]
        #print("Train slices: ", train_slices)
        #print("Validation slices: ", valid_slices)
        valid_writer = SummaryWriter(log_dir + "valid_" + name)

    tain_slices = [23641, 26170, 22986, 2887, 14907, 8626, 25857, 15162, 23159, 18305, 23163, 11731, 7072, 9302, 13555, 2583, 8622, 13404, 11636, 15147, 14775, 17607, 17629, 14921, 2561, 5101, 17514, 11615, 5141, 13982, 5169, 21033, 27014, 17441, 23661, 20600, 17523, 26853, 23078, 26859, 17526, 17385, 20573, 11656, 20512, 20587, 2252, 27001, 23398, 13358, 25816, 13366, 13421, 2188, 5345, 8030, 15196, 13391, 18399, 17442, 7103, 23108, 13505, 8028, 2261, 14798, 14945, 8040, 25834, 2189, 17234, 23367, 2667, 2249, 17406, 13474, 8602, 7012, 7978, 7995, 22940, 5201, 14882, 7068, 5306, 2665, 23640, 17152, 14755, 14799, 11684, 23000, 13956, 14015, 14842, 21078, 26926, 11711, 17422, 5154, 26127, 11694, 23142, 13502, 13453, 26837, 7922, 26769, 5229, 2658, 17586, 26851, 22948, 21080, 14946, 23609, 13913, 7932, 18359, 2657, 25832, 25878, 17470, 23008, 11659, 9299, 23120, 2551, 23456, 5177, 18397, 17450, 7033, 26101, 2181, 23032, 17136, 26991, 17232, 8668, 11701, 2154, 18373, 23720, 8591, 20511, 18378, 5307, 5179, 26826, 8673, 23373, 13591, 5110, 5285, 14957, 26075, 5319, 23678, 6995, 13399, 26804, 23005, 5348, 7965, 14866, 22953, 15223, 11651, 23711, 21054, 13914, 20606, 9387, 23086, 23347, 5238, 26928, 18338, 11718, 11722, 17235, 17428, 13352, 14760, 9289, 23418, 8597, 23335, 8609, 18325, 8633, 17574, 5273, 2600, 13433, 13410, 20545, 9315, 26763, 5241, 17602, 26143, 17429, 14891, 21065, 14730, 20510, 2546, 17448, 8583, 20633, 17229, 2148, 17173, 8023, 17148, 22954, 17376, 17378, 17147, 9290, 17178, 11622, 13939, 23062, 15116, 5091, 21102, 8639, 20597, 11710, 26976, 5087, 14764, 2926, 14934, 5196, 27018, 26829, 5313, 7984, 23428, 23069, 13902, 18302, 13503, 17108, 7015, 26904, 23660, 2849, 17562, 25823, 2925, 2222, 13506, 17446, 15115, 21137, 25831, 17394, 18414, 8651, 2574, 17597, 23728, 8655, 23191, 26856, 13440, 7992, 8029, 17142, 18370, 25902, 2862, 9339, 2830, 18352, 7077, 17611, 21118, 13547, 17510, 2585, 2586, 9397, 5254, 25867, 21126, 25876, 8019, 13912, 26914, 26822, 17138, 15151, 17218, 21136, 14796, 2855, 9341, 13490, 13427, 5261, 25829, 26156, 18296, 5161, 25800, 13572, 5185, 17547, 2172, 14914, 14932, 25858, 18395, 8665, 20507, 8637, 2871, 5132, 14854, 18308, 25821, 2820, 2860, 17610, 23175, 26151, 14785, 5303, 11669, 2582, 18351, 23158, 23355, 17226, 8683, 13527, 17612, 9411, 18327, 7927, 5279, 26134, 20621, 2817, 9326, 2264, 9323, 8041, 18331, 14950, 23179, 23021, 5351, 2194, 14025, 17106, 23146, 17392, 26776, 7075, 8616, 20516, 5145, 26113, 5233, 8638, 7924, 5349, 17535, 5211, 5297, 23183, 2806, 2678, 13514, 8022, 26877, 15215, 2843, 9363, 2587, 18404, 5128, 20565, 15114, 5162, 21095, 8691, 20583, 2580, 2162, 18298, 11734, 26750, 18300, 23039, 8036, 25896, 23665, 23348, 9294, 17519, 17233, 5334, 13523, 5270, 13901, 20570, 26749, 23683, 22964, 23462, 14808, 26166, 9386, 8693, 5157, 7062, 23190, 17109, 13383, 20569, 2821, 26123, 5203, 23128, 17503, 14852, 2615, 14734, 26876, 18396, 13479, 20602, 26186, 11726, 23334, 2150, 2852, 20580, 2906, 23705, 11616, 23155, 21043, 17411, 26830, 2669, 26154, 2255, 13528, 11640, 26787, 20568, 26979, 22973, 21122, 17492, 5142, 20622, 9365, 13560, 17483, 26986, 17181, 2641, 26773, 14000, 7045, 17115, 26957, 21106, 23608, 23080, 2539, 27009, 13980, 21059, 22957, 20527, 26844, 23070, 15161, 14940, 2656, 25879, 5121, 23647, 9366, 2155, 5144, 21079, 13534, 17172, 17423, 2250, 23682, 5282, 15154, 23392, 18337, 2646, 14750, 26132, 25803, 25904, 15227, 5174, 13971, 17219, 26187, 5096, 15190, 5342, 23113, 2911, 25916, 8692, 8694, 25830, 26891, 5176, 17119, 20595, 14004, 9372, 2664, 8043, 11634, 2216, 26964, 14877, 23027, 15142, 7054, 25852, 14744, 23132, 17577, 2935, 17153, 26821, 17512, 18366, 13937, 18312, 7928, 21081, 5199, 23024, 14920, 26855, 26948, 2175, 13919, 13385, 23690, 13909, 23033, 9359, 26843, 17383, 13347, 11714, 20592, 23106, 2659, 23696, 17390, 7010, 17160, 23633, 21159, 2660, 18384, 5343, 17128, 17506, 23105, 20614, 21096, 2225, 9279, 5166, 26832, 14951, 26194, 17399, 17481, 2588, 23439, 14821, 21083, 25869, 5298, 5310, 17171, 2156, 14915, 18334, 25885, 20598, 23077, 23344, 25860, 21092, 23451, 8611, 17217, 25809, 15199, 17375, 8002, 2813, 8617, 2854, 2837, 25797, 2841, 18363, 26177, 23066, 18332, 20588, 23408, 5126, 7078, 11666, 23616, 5242, 20604, 9284, 2913, 13481, 15159, 8621, 13925, 20536, 17570, 2893, 21160, 11688, 5284, 13984, 17457, 2256, 11644, 15140, 5123, 23011, 7070, 15130, 14711, 7047, 21058, 8703, 18345, 14923, 26189, 6985, 23401, 18322, 5240, 14020, 17116, 2631, 5304, 9340, 13517, 18398, 5333, 17591, 14731, 2928, 7920, 26963, 23184, 2209, 15101, 17123, 5224, 20575, 18318, 14928, 26092, 23187, 8720, 21156, 13997, 11628, 23185, 17529, 26865, 17130, 13928, 8005, 2644, 5127, 26978, 17606, 15132, 15193, 25909, 26812, 20590, 2258, 2838, 17215, 17546, 15176, 21130, 17391, 23130, 14952, 7020, 14832, 13577, 17488, 15141, 2559, 13918, 26873, 8695, 2936, 22984, 13987, 20571, 23150, 14830, 9353, 8017, 25801, 9311, 13504, 25866, 5325, 17206, 14875, 21042, 23171, 15168, 26929, 26947, 5329, 14863, 13988, 23429, 26200, 14797, 5323, 5317, 2601, 26808, 14767, 26791, 5124, 13557, 2858, 13926, 26952, 25799, 23043, 20615, 8589, 26118, 2632, 23657, 8046, 17170, 2903, 13465, 7051, 18348, 2635, 11607, 5155, 2152, 20547, 26788, 15221, 20582, 7037, 13900, 14876, 14958, 17619, 17474, 20561, 5227, 23458, 17536, 15137, 5346, 14848, 11621, 9370, 26147, 26770, 22985, 7933, 9367, 14010, 17541, 13371, 14759, 25804, 26133, 8047, 20611, 25861, 8671, 23444, 9393, 2604, 18408, 2218, 2567, 14022, 13478, 5236, 15134, 23151, 14728, 23691, 2661, 17433, 23339, 26933, 22975, 7022, 13962, 21069, 26834, 5130, 13568, 8685, 25926, 7017, 13567, 17572, 5320, 26130, 23453, 26980, 23717, 20524, 23385, 8699, 21090, 17387, 8628, 23674, 9332, 14002, 15218, 21120, 18291, 2662, 7989, 2549, 9374, 26076, 15166, 17184, 8702, 20506, 18328, 23619, 21100, 7999, 23378, 13412, 14816, 17372, 23353, 18320, 13512, 17137, 2902, 23737, 9317, 23073, 21091, 13486, 2179, 11733, 21131, 15191, 17592, 13539, 9375, 2624, 23131, 11697, 25836, 23656, 14027, 25841, 7951, 13438, 23340, 23122, 25893, 7931, 22967, 6991, 2909, 25802, 2263, 8640, 17221, 7058, 26099, 13603, 23436, 13381, 18306, 23693, 22968, 26861, 23649, 7986, 13938, 8608, 2259, 2257, 23103, 17180, 11654, 11632, 14769, 17424, 14784, 25913, 26779, 20630, 14024, 14761, 5289, 26107, 23651, 2555, 13944, 23125, 13379, 13516, 9385, 15173, 13443, 13467, 26949, 14836, 7106, 15167, 9285, 11639, 18390, 11623, 2809, 2147, 13529, 2924, 25877, 13952, 26139, 26825, 5347, 14942, 5290, 14001, 26193, 14895, 17191, 5314, 8027, 13521, 5324, 8584, 8718, 23396, 17425, 13499, 17626, 9287, 15126, 5335, 17227, 8657, 20591, 17516, 13525, 5249, 23370, 14763, 14841, 13969, 17573, 17371, 2182, 5119, 14949, 23659, 7969, 14901, 21034, 11686, 27006, 2666, 17624, 5294, 25914, 26833, 5280, 9373, 5131, 17211, 17162, 7980, 13943, 13570, 17484, 25924, 13429, 21056, 21037, 13550, 8033, 15164, 7019, 5153, 23642, 7993, 5173, 14811, 7036, 26085, 13498, 13983, 13548, 2568, 13364, 7009, 22976, 5088, 14962, 11730, 21070, 23371, 23104, 2246, 20613, 26114, 9336, 18358, 18424, 2210, 8600, 15112, 7966, 11645, 13935, 5257, 23387, 13365, 21111, 17459, 17531, 26778, 15138, 17498, 13929, 7942, 15208, 9310, 2560, 17625, 26887, 13542, 25925, 13917, 14016, 23407, 11703, 17534, 21108, 23703, 2142, 17445, 2920, 9298, 17124, 8669, 23738, 5212, 5178, 14746, 18410, 2638, 26122, 14943, 13546, 11692, 2548, 15195, 14883, 8643, 18342, 13911, 14888, 7060, 17154, 23360, 11712, 5247, 23692, 13932, 11708, 17560, 14839, 5246, 18421, 2558, 5286, 14715, 7024, 14909, 7985, 26895, 26800, 17208, 21133, 26755, 9407, 18372, 26993, 8582, 26751, 17568, 8014, 2619, 17491, 20624, 26971, 17513, 14018, 15139, 25808, 2825, 11643, 14726, 23381, 2543, 7945, 25875, 14908, 21093, 25805, 5137, 5192, 26867, 2626, 11660, 26910, 2643, 8038, 13488, 20556, 17443, 7061, 5197, 23055, 17447, 15203, 13921, 2932, 23622, 17579, 20537, 23129, 13960, 2811, 9355, 26915, 17125, 14006, 14765, 2874, 23017, 5134, 13602, 8641, 18381, 2176, 23714, 8689, 18385, 23722, 25844, 26764, 23148, 20538, 22935, 23160, 7917, 5133, 2805, 5223, 26138, 8666, 17426, 5167, 11673, 7981, 11652, 14916, 2831, 26129, 26111, 8648, 15224, 11655, 20508, 17207, 26081, 11630, 23389, 23713, 7091, 20572, 20596, 23045, 14713, 26141, 25882, 15102, 9362, 8711, 26176, 7052, 25851, 20555, 14810, 13368, 13920, 13491, 21068, 18333, 26762, 13963, 21076, 15205, 14782, 5104, 2599, 7074, 7097, 18413, 17373, 22945, 23082, 13444, 15121, 15135, 13976, 8690, 20559, 17159, 13978, 9327, 17557, 26097, 6979, 21119, 2847, 18416, 11695, 2584, 9402, 15111, 8632, 2891, 18394, 2886, 5234, 15219, 22994, 13485, 20533, 25855, 8614, 9401, 25833, 20544, 14849, 23156, 7941, 13538, 17575, 5118, 14003, 9280, 21077, 8619, 17427, 26962, 14756, 2876, 11614, 17595, 17588, 8647, 26748, 13968, 8000, 5260, 21134, 17585, 2607, 13947, 23042, 25817, 27004, 26969, 9316, 26798, 2603, 20497, 11641, 21147, 23101, 20523, 23667, 13549, 2168, 9356, 17121, 7082, 2823, 5276, 2185, 13573, 18326, 17118, 26135, 14817, 2846, 5150, 11675, 7085, 2804, 26840, 5328, 2217, 23413, 25856, 15105, 14835, 13541, 26886, 7963, 13580, 8618, 26782, 14887, 2818, 8620, 13554, 26939, 17439, 25922, 5218, 18423, 15204, 13924, 17600, 8595, 18329, 11638, 15109, 22995, 8634, 26977, 14856, 17158, 2193, 26942, 20584, 7957, 9301, 7925, 17151, 23007, 27017, 2214, 23613, 2919, 26924, 26922, 22936, 13361, 13345, 7988, 13904, 23139, 2865, 21060, 17486, 21123, 11618, 13450, 26968, 20627, 26898, 13422, 2171, 9409, 23167, 25806, 13493, 8612, 22988, 8676, 14898, 7025, 17196, 8649, 20546, 13356, 23006, 17558, 25863, 21072, 27002, 14860, 23624, 26966, 2206, 5189, 11671, 26846, 5255, 2829, 7926, 7004, 14917, 17402, 17222, 8645, 7000, 23135, 23460, 17231, 17454, 14918, 9404, 18411, 5205, 15107, 15180, 17553, 2857, 2153, 26171, 2595, 23109, 7100, 14859, 23081, 26847, 26775, 26752, 6998, 5309, 5243, 2244, 13990, 9297, 23118, 7929, 23715, 5239, 7034, 7954, 13442, 23010, 11624, 9306, 23701, 26753, 7101, 5143, 13380, 11683, 23162, 18380, 18311, 7056, 17507, 17520, 23063, 7044, 23097, 14770, 15160, 26940, 23679, 5107, 23050, 23168, 13967, 2676, 2653, 22982, 23652, 9352, 14894, 8658, 9277, 26917, 2672, 26126, 26803, 26183, 8587, 17117, 7090, 23402, 23074, 13604, 9293, 20505, 9305, 26906, 26155, 5250, 2578, 2242, 23087, 23172, 14019, 21039, 9344, 26850, 17110, 17144, 26757, 5095, 20503, 13459, 17395, 13375, 7976, 2892, 14953, 26074, 25906, 26106, 27011, 26174, 23384, 17129, 9389, 21035, 23400, 5164, 23013, 5331, 7953, 8588, 26181, 23393, 14889, 13388, 23174, 17548, 13533, 14719, 17475, 9272, 14925, 26923, 18392, 7918, 26913, 18391, 21067, 13416, 13457, 5350, 11613, 26089, 11721, 21145, 7089, 17205, 13423, 14838, 26090, 5129, 22941, 5136, 26801, 13469, 5268, 14012, 7921, 23726, 2840, 26197, 26079, 14780, 5117, 27003, 9399, 2803, 23735, 5175, 8001, 9331, 17214, 9395, 22969, 17458, 11625, 23366, 11732, 5209, 6978, 13431, 25864, 14822, 26866, 21114, 5355, 2262, 18361, 13468, 13510, 14739, 23432, 17210, 17563, 14721, 15152, 13466, 17465, 17556, 9388, 20532, 5146, 21149, 9403, 9342, 13406, 26140, 26195, 21084, 23388, 8623, 14902, 5156, 2234, 5210, 23625, 2165, 23093, 13993, 23406, 14021, 15124, 17528, 5100, 7026, 11620, 5109, 2161, 2576, 23342, 23173, 25840, 21161, 7005, 22996, 2904, 20634, 7069, 26888, 17469, 20515, 2608, 17412, 13586, 14729, 2169, 17584, 2245, 18294, 23089, 25920, 7998, 2219, 21115, 15163, 2881, 23621, 15143, 23090, 20528, 8026, 17389, 5183, 14803, 17197, 6982, 7088, 23441, 18387, 23623, 8603, 5267, 13518, 13354, 5108, 6999, 2815, 5354, 2648, 8050, 25887, 18314, 13436, 18303, 13407, 14710, 13599, 9333, 14737, 5090, 15106, 26854, 14747, 17236, 5253, 2890, 9282, 17620, 13569, 11716, 13402, 2563, 7962, 17146, 17150, 7960, 23430, 26874, 26152, 11648, 25810, 9318, 17515, 13583, 8049, 22990, 17169, 15127, 26146, 17410, 15118, 8031, 18347, 5207, 8714, 17462, 2545, 13400, 23706, 23615, 18343, 13600, 17542, 2223, 20535, 8654, 5163, 26893, 13395, 25818, 15189, 2616, 14827, 23670, 13487, 20502, 23627, 26789, 11713, 18336, 2645, 23374, 14745, 18403, 8687, 13996, 7099, 7032, 23054, 5147, 23134, 15209, 26104, 14766, 5213, 15177, 23025, 9348, 23189, 23654, 7923, 6984, 23689, 26080, 8003, 13595, 2649, 23646, 26989, 8045, 22962, 7006, 23071, 14964, 13941, 2226, 13589, 13563, 26836, 23712, 21041, 7930, 9281, 2233, 5316, 13439, 7949, 17420, 13392, 6980, 15200, 23369, 7057, 14929, 6986, 2598, 2597, 23677, 7970, 23037, 2590, 21104, 14791, 5235, 20554, 13957, 14707, 25853, 22980, 2875, 23169, 15157, 23049, 26870, 8607, 21110, 26777, 13536, 2907, 23639, 5148, 5251, 8051, 23671, 2239, 17174, 20529, 26862, 20610, 14912, 23422, 7029, 14790, 26158, 26781, 26768, 13908, 23116, 13953, 21153, 23329, 25892, 11610, 8705, 22946, 11706, 2850, 2896, 23365, 20618, 17431, 2873, 23664, 25826, 23695, 14028, 2930, 9379, 13934, 17112, 11670, 17583, 26150, 13948, 17617, 11661, 5245, 26086, 2816, 22943, 18339, 17594, 11717, 26934, 13553, 17188, 14944, 15158, 13449, 2620, 13936, 13537, 17511, 15133, 5191, 5293, 9320, 13367, 23426, 23056, 5172, 17141, 9358, 7021, 13464, 17564, 17113, 26902, 7011, 21050, 6996, 8042, 11653, 17504, 26149, 2251, 17493, 26999, 2937, 5190, 23725, 7081, 2869, 14947, 23734, 8717, 5358, 22977, 5299, 14868, 26937, 23031, 20531, 18340, 8631, 17451, 13526, 13597, 11664, 20626, 18402, 13349, 17131, 23629, 17167, 23446, 13432, 14011, 2898, 2878, 23700, 13458, 18299, 17561, 25820, 9335, 5180, 23710, 18316, 8034, 8606, 23394, 9376, 7105, 13413, 20551, 23382, 2143, 13482, 9390, 7080, 26144, 15217, 23095, 23331, 17409, 26182, 14873, 14813, 13484, 17440, 2213, 2866, 2591, 18293, 23345, 2894, 20616, 13979, 14748, 14850, 26890, 2668, 14807, 25928, 22960, 2241, 23414, 23136, 14858, 6989, 23036, 17555, 20625, 21062, 11668, 7063, 26899, 17472, 23445, 23112, 7987, 20518, 13357, 26772, 21155, 7013, 18297, 15216, 20521, 8700, 23152, 11693, 5301, 18346, 21127, 26809, 14961, 17120, 13394, 2562, 25919, 11637, 25874, 26943, 21148, 23709, 11642, 7071, 8020, 25824, 23141, 17382, 2207, 5228, 17132, 5116, 22952, 23176, 26128, 13477, 13476, 17460, 8660, 5339, 17224, 13959, 21151, 23181, 13532, 8593, 2824, 9274, 26925, 14939, 23115, 17464, 11735, 13446, 14897, 26818, 9347, 23352, 7940, 22997, 20513, 23708, 2835, 26172, 21057, 14922, 26199, 2923, 2195, 25859, 20498, 23076, 22955, 2178, 14777, 26967, 17163, 13965, 23052, 23416, 23727, 23023, 26196, 2622, 20605, 14937, 15186, 2550, 15202, 26190, 13981, 20617, 26121, 13584, 7107, 23704, 17605, 5186, 22987, 2540, 13515, 2851, 14899, 17501, 13492, 15170, 7974, 13509, 2842, 26100, 26909, 5113, 5283, 14829, 25811, 14742, 11689, 8006, 18323, 5326, 25871, 23397, 17155, 26192, 9381, 5102, 2203, 11679, 5292, 23034, 13578, 15110, 2870, 17613, 11662, 18406, 26105, 23626, 23699, 5140, 7087, 14924, 13989, 22972, 26997, 14005, 14727, 8656, 9286, 25814, 26974, 13346, 13425, 23170, 20628, 11728, 7972, 13545, 8644, 13916, 2202, 17216, 23666, 26892, 18379, 14965, 13363, 14787, 25865, 13419, 23687, 2544, 5337, 5266, 14948, 14754, 8698, 26091, 17614, 15220, 14752, 2642, 26117, 15198, 23457, 13945, 2655, 14809, 2606, 23180, 11678, 13551, 8015, 20603, 7042, 26131, 14886, 14795, 15149, 26903, 2677, 5187, 17480, 18330, 8610, 14778, 26842, 2556, 17569, 14771, 26901, 13942, 13378, 8004, 27000, 18371, 13384, 21112, 7066, 9314, 20560, 23341, 5165, 20593, 2614, 14959, 25815, 9337, 23193, 23359, 17468, 26797, 2211, 11720, 26124, 11715, 5093, 22944, 22993, 26756, 13897, 26164, 23724, 14826, 23463, 14846, 8664, 23663, 8672, 14843, 13575, 14723, 11727, 5259, 11663, 5315, 2167, 5216, 5182, 23731, 2853, 23662, 23040, 20539, 23415, 11723, 7046, 14878, 8680, 13522, 26188, 17203, 20525, 26180, 25915, 8636, 6993, 23454, 15197, 5106, 15172, 25850, 14743, 9357, 7961, 9312, 2269, 20552, 2623, 25907, 18377, 2848, 18319, 13552, 26973, 2197, 2810, 13382, 20577, 5195, 25891, 23644, 23149, 7053, 20541, 23653, 17415, 27013, 2927, 2859, 20576, 23041, 2174, 26116, 26954, 11635, 23068, 7067, 23390, 25889, 20567, 17182, 2553, 26766, 21101, 2201, 11611, 11626, 13972, 17453, 2895, 13495, 8598, 23114, 7065, 8010, 17192, 26857, 13995, 13418, 17582, 23650, 7083, 18355, 2566, 13359, 23680, 26860, 26112, 23684, 23154, 9319, 23357, 2589, 7035, 23092, 20566, 5360, 25917, 7937, 2236, 26930, 20557, 23121, 23075, 26767, 9364, 23009, 13460, 2557, 6990, 18357, 26084, 15155, 7073, 25898, 20520, 13906, 14758, 23044, 11658, 13448, 26950, 8701, 13601, 23702, 26774, 13907, 17403, 5265, 18386, 2212, 5208, 11681, 23333, 5305, 5277, 8663, 23411, 6997, 5256, 17576, 22937, 5295, 26815, 5271, 21144, 2826, 23057, 13389, 14935, 14938, 11676, 13991, 25901, 17479, 2611, 18301, 18324, 23391, 9273, 17183, 14828, 26811, 23153, 13461, 21113, 26754, 5252, 26088, 17379, 9394, 13579, 5288, 7104, 13899, 26881, 23140, 21152, 25929, 9350, 7967, 20504, 25822, 26813, 8635, 13999, 25881, 23338, 23051, 2151, 13565, 20564, 13903, 26935, 23029, 5258, 11606, 2673, 2184, 14837, 23343, 11698, 26885, 18407, 9276, 9313, 8706, 8719, 13946, 14724, 8013, 17126, 18362, 15184, 17161, 17111, 2609, 26136, 23419, 26096, 8653, 23634, 7102, 17374, 23380, 17186, 11704, 18356, 13372, 17213, 21109, 9322, 27007, 2647, 13966, 8586, 8713, 21162, 25883, 23438, 18412, 5357, 8688, 15206, 2198, 20578, 23178, 17194, 23127, 2238, 23421, 7973, 5135, 21094, 17485, 7997, 26806, 8615, 8670, 23079, 7027, 2629, 9378, 26970, 25911, 26920, 5170, 23026, 13566, 14714, 26184, 17393, 26972, 17467, 13556, 13940, 15183, 14825, 25848, 5149, 13592, 23412, 2192, 8592, 17157, 20563, 17518, 26918, 17495, 5308, 22971, 13973, 13386, 13531, 13933, 14930, 9343, 13975, 5098, 2929, 27010, 23379, 23620, 7935, 9288, 21044, 2901, 14753, 2888, 26868, 26927, 17461, 5139, 7939, 17190, 26995, 21038, 15156, 22947, 2833, 17149, 5171, 14738, 25927, 18354, 26759, 21121, 9360, 26958, 14741, 23358, 23004, 8659, 7023, 26771, 23632, 9291, 23404, 26831, 15182, 15122, 22961, 8710, 25846, 13519, 23346, 26191, 14874, 23721, 7076, 21139, 8712, 14851, 13437, 7990, 14963, 23614, 5215, 23729, 13598, 11646, 26802, 2921, 11605, 23610, 25899, 17166, 2215, 8662, 26900, 15131, 17616, 11650, 23643, 25827, 13562, 26869, 2205, 17477, 13992, 17398, 2190, 26814, 17571, 14717, 7086, 21063, 15100, 26884, 18409, 8681, 17618, 13411, 17419, 14732, 23137, 15210, 21138, 25931, 23434, 7979, 2145, 23449, 17622, 2910, 20635, 23697, 2158, 20534, 21071, 21048, 17107, 9400, 26848, 2552, 26145, 5231, 13923, 5160, 2200, 15099, 17508, 20601, 23447, 14804, 17187, 20579, 2575, 14762, 2864, 26985, 5264, 8021, 26179, 21066, 17623, 26163, 8674, 22998, 17228, 2173, 23117, 5327, 26137, 13445, 26882, 8012, 8707, 20499, 26936, 7950, 5226, 13500, 23718, 17397, 23336, 21135, 5318, 13977, 14725, 23111, 2267, 15222, 18383, 22999, 23630, 13473, 17176, 26908, 17517, 17452, 2844, 6987, 2579, 26953, 9392, 17418, 25888, 14774, 2554, 26120, 5158, 25812, 14814, 11725, 18368, 2807, 13417, 23356, 5322, 23038, 20599, 11601, 2836, 23091, 22978, 14833, 8039, 17436, 11729, 13426, 2671, 23053, 13483, 17589, 18375, 21053, 26761, 2634, 18393, 18400, 6983, 5184, 5332, 15136, 11602, 26125, 25897, 13974, 20619, 7094, 11609, 18389, 23022, 21146, 2547, 17225, 9308, 20550, 7943, 15214, 23638, 8585, 17200, 14013, 2164, 17198, 17175, 26879, 7977, 17565, 14824, 23014, 2577, 2180, 26852, 13351, 7028, 23330, 26807, 9391, 2934, 2248, 7991, 22983, 14862, 9380, 17489, 25837, 17596, 23016, 5111, 17522, 7002, 14936, 26880, 18422, 26988, 13964, 17455, 15192, 14941, 2819, 11707, 8677, 2186, 8032, 5352, 23364, 5214, 26095, 2812, 23450, 27012, 26996, 25895, 13564, 23145, 25835, 14819, 23675, 7919, 20585, 26165, 13362, 15113, 5225, 2915, 26168, 18292, 14845, 26994, 13543, 26103, 23452, 21143, 23410, 2880, 2867, 9330, 17223, 13471, 9307, 5092, 26786, 23332, 17437, 7001, 15150, 17384, 18376, 9283, 7959, 25910, 7014, 2931, 2592, 26783, 13561, 26810, 18369, 2868, 2569, 8052, 2170, 21049, 8682, 8613, 18405, 2802, 21040, 13540, 2196, 23611, 25798, 23377, 13905, 11599, 13508, 2651, 23072, 11696, 13961, 17487, 13455, 23157, 2268, 8007, 7041, 20548, 2889, 11677, 22979, 26793, 17615, 2191, 23133, 23088, 26159, 23099, 17380, 17599, 17545, 23100, 20549, 9349, 23424, 13393, 13374, 13405, 9351, 13353, 11724, 9361, 8696, 9278, 14794, 5248, 22981, 23363, 5194, 7018, 2832, 26148, 23067, 26785, 7055, 21082, 9304, 18295, 5336, 20589, 15212, 14773, 25884, 9275, 23459, 23372, 15213, 2637, 2146, 17195, 13435, 26981, 13376, 7983, 15194, 2879, 17604, 22963, 17609, 14818, 15175, 22949, 21103, 9303, 5275, 13915, 13344, 17177, 17114, 2266, 13396, 26098, 23648, 17587, 17127, 8708, 13456, 17478, 23427, 18353, 8684, 13588, 9382, 7050, 13954, 23161, 21116, 5206, 26175, 21158, 17500, 5269, 26083, 11674, 26878, 7947, 2243, 8024, 14706, 18367, 13520, 26872, 5274, 23003, 5168, 15185, 20632, 25923, 5094, 17381, 23612, 26799, 26173, 15144, 2254, 8716, 23443, 26897, 2166, 5103, 2899, 15123, 5272, 23618, 5202, 11633, 14831, 17581, 26142, 5311, 7048, 26198, 9377, 17179, 25839, 17578, 20519, 23361, 2265, 17386, 2905, 13587, 26911, 8678, 14853, 26871, 2541, 17401, 2228, 2235, 7936, 17444, 17434, 14967, 20574, 14789, 13582, 23685, 26983, 2883, 13420, 2230, 5278, 11649, 21086, 14786, 17559, 8652, 25870, 21046, 14783, 23658, 5219, 21052, 13559, 8646, 2237, 5230, 23405, 17212, 26982, 23060, 2845, 17413, 23733, 21051, 2900, 5115, 13949, 2565, 17532, 17449, 2163, 7007, 25886, 8604, 26819, 2627, 17204, 21036, 5359, 17621, 11619, 20542, 13409, 25880, 17202, 5220, 26959, 15146, 14749, 8037, 7958, 18364, 14871, 2801, 26835, 13544, 26817, 14768, 17122, 25894, 18307, 5302, 5097, 7093, 17140, 18419, 26823, 26946, 2593, 14880, 14805, 13898, 18313, 18418, 26102, 9334, 13475, 23001, 20530, 23420, 17590, 7059, 2814, 9406, 26883, 26115, 17388, 26078, 2224, 25903, 23681, 23688, 14779, 8675, 5217, 18310, 20514, 2542, 5105, 11612, 8599, 5356, 7968, 20558, 7043, 26845, 13593, 17230, 21055, 23672, 13398, 18382, 13370, 2916, 13355, 23354, 6992, 7016, 2828, 9368, 11647, 14893, 2630, 26951, 8697, 8605, 20608, 26161, 2260, 5312, 15207, 26160, 5291, 23164, 13451, 5353, 2187, 17421, 21089, 8008, 11690, 26839, 18321, 17496, 7096, 23015, 17105, 15211, 21107, 5321, 20586, 14823, 26992, 14812, 26169, 2221, 14772, 14801, 25854, 8627, 26162, 9384, 22974, 23012, 26796, 23147, 5151, 26875, 27008, 15169, 5114, 25900, 26784, 13970, 15165, 13513, 22951, 17627, 14913, 26945, 14896, 23188, 23349, 17550, 2573, 7994, 21098, 26919, 13950, 2908, 26984, 25921, 17414, 2640, 2149, 26838, 17537, 11685, 15178, 26758, 21141, 17603, 22966, 14884, 18420, 17405, 26157, 6981, 23631, 23636, 11629, 23686, 27015, 7975, 2247, 11603, 23084, 14751, 18374, 13454, 14872, 9309, 23102, 14840, 13581, 25819, 8594, 13348, 18417, 11672, 5089, 23736, 14906, 26916, 17199, 2675, 23020, 2917, 17463, 13927, 18388, 7956, 7938, 14900, 17543, 23440, 25796, 13447, 18350, 14861, 21129, 11700]

    valid_slices = [8625, 23123, 23668, 7049, 2199, 22992, 5122, 20607, 9396, 2882, 17476, 23676, 25862, 15179, 17416, 17540, 23192, 23368, 17533, 14009, 23138, 13998, 13472, 2918, 11631, 26965, 2861, 23144, 13441, 23669, 11709, 20509, 18344, 11682, 21085, 11617, 26082, 15117, 11608, 14926, 13605, 9345, 2594, 17593, 14933, 13535, 2650, 8624, 26956, 2596, 5152, 14023, 23698, 8048, 14029, 11719, 13390, 5300, 2674, 13414, 13511, 17538, 26805, 8009, 2232, 8011, 11702, 21061, 26794, 25843, 14017, 23143, 5125, 23425, 11705, 26119, 26153, 7084, 2633, 5296, 26109, 17527, 17189, 6988, 5232, 14919, 14890, 15104, 23635, 25849, 14722, 9324, 17432, 13590, 26824, 17552, 26944, 2204, 17509, 21105, 20609, 8715, 20612, 8590, 2610, 23645, 17165, 18415, 23085, 23362, 8704, 17539, 13408, 8630, 21154, 25918, 25908, 2159, 13986, 2670, 23716, 26863, 2652, 17554, 26907, 15153, 13994, 21140, 21087, 20562, 17551, 26941, 17134, 2933, 17438, 2253, 23617, 14793, 13462, 21064, 23694, 26816, 14007, 17135, 11691, 7944, 14955, 23730, 14904, 2863, 23403, 26961, 5193, 14718, 14740, 17145, 23395, 7003, 5330, 23448, 23435, 13558, 17370, 13501, 9338, 17430, 13524, 23431, 23064, 14733, 13428, 26765, 17566, 17499, 14736, 23058, 17580, 22965, 2613, 14881, 7031, 7964, 14720, 18401, 20620, 17400, 23166, 22956, 15120, 5200, 7971, 20517, 26841, 2581, 17456, 7982, 14815, 9410, 23124, 21142, 13489, 2885, 9329, 8016, 13507, 23165, 17482, 25842, 9354, 9383, 13574, 26975, 2144, 14910, 23059, 8709, 13360, 14802, 20500, 21073, 11699, 13496, 15125, 23061, 18335, 5344, 14834, 7038, 2571, 17502, 5244, 17407, 6994, 23337, 17544, 8661, 23182, 20581, 18289, 7008, 18309, 14879, 26760, 11687, 27005, 21075, 2639, 5263, 5281, 18341, 25847, 25930, 5188, 15226, 17156, 7948, 2636, 2914, 13594, 22991, 13463, 2240, 13424, 7955, 23107, 17524, 26828, 23376, 14855, 20543, 14931, 5159, 23048, 20631, 17185, 5112, 14014, 8053, 25845, 17466, 14865, 15103, 14892, 22938, 21125, 8601, 13497, 26792, 17549, 13377, 26108, 9405, 14712, 14867, 7952, 22939, 21097, 9325, 23409, 2922, 23030, 2621, 23719, 26955, 15148, 13452, 15187, 8686, 13434, 20629, 5198, 5237, 23065, 8667, 17220, 7039, 14960, 22989, 14708, 23707, 2220, 26896, 14870, 11680, 8025, 2912, 14716, 7079, 23437, 23455, 21128, 17473, 14806, 20501, 25868, 14776, 18360, 23126, 13985, 21045, 2227, 9371, 23186, 25807, 17408, 26093, 13922, 7092, 9292, 17505, 23028, 14844, 17601, 25828, 2822, 15128, 2663, 15171, 26858, 26998, 2605, 26077, 22959, 17530, 5338, 21124, 14008, 23194, 2183, 21132, 21088, 25873, 2229, 23628, 5181, 23732, 23083, 7030, 26894, 13930, 2208, 13494, 23386, 2570, 8018, 23655, 15201, 17494, 23035, 15181, 17525, 13951, 15129, 14788, 5341, 13530, 13571, 9369, 17164, 2834, 23442, 11627, 22942, 18290, 23098, 2231, 11600, 14905, 15188, 26932, 21099, 26912, 14800, 17497, 14911, 23019, 8044, 23119, 9412, 11657, 11665, 2612, 2856, 9328, 8679, 21150, 7098, 23110, 2564, 26167, 26931, 17396, 13955, 20594, 25825, 13369, 8650, 9346, 26185, 14956, 18315, 26087, 17608, 14903, 2602, 13401, 25912, 2808, 26795, 2839, 14864, 13910, 5222, 21117, 8629, 2884, 15145, 21157, 14857, 17377, 23046, 25905, 23375, 17567, 7040, 14792, 14954, 17435, 9295, 13931, 13415, 14026, 13397, 14885, 2618, 23637, 14968, 2897, 8596, 15225, 26178, 2872, 23094, 22958, 14966, 14735, 23417, 23002, 5204, 14927, 14757, 14869, 26905, 17193, 14781, 26790, 2160, 20526, 2177, 23723, 26987, 26094, 5099, 9398, 20540, 17139, 5138, 17209, 17133, 13387, 15108, 26827, 23096, 2625, 13585, 23673, 26960, 25838, 5287, 14820, 20553, 17168, 17471, 2654, 13576, 23433, 2617, 25890, 9321, 2877, 23350, 23461, 21047, 18317, 26820, 5262, 18304, 13350, 25813, 17521, 5120, 17201, 11604, 23351, 26921, 9296, 23177, 18365, 20623, 23018, 9408, 13480, 9300, 7064, 14847, 7946, 17143, 22950, 26780, 13596, 23423, 18349, 13470, 17369, 23047, 17490, 15174, 21074, 7996, 25872, 26849, 13430, 13403, 13958, 15119, 22970, 26990, 8035, 26938, 5221, 2572, 23399, 11667, 2827, 23383, 7095, 17598, 14709, 2157, 17417, 26864, 13373, 8642, 2628, 5340, 27016, 17404, 26110, 17628, 20522, 7934, 26889]

    # Load data
    subj_dataset = brats_dataset_subj(data_path, 'train', img_size, train_slices, use_aug=False)
    subj_loader = data.DataLoader(subj_dataset, batch_size=batch_size, shuffle=True, num_workers=3)
    print('Subject ', subj, ' Number of Slices: ', subj_dataset.size)

    # Load data
    valid_subj_dataset = brats_dataset_subj(data_path, 'train', img_size, valid_slices, use_aug=False)
    valid_subj_loader = data.DataLoader(valid_subj_dataset, batch_size=batch_size, shuffle=True, num_workers=3)
    print('Subject ', subj, ' Number of Slices: ', valid_subj_dataset.size)

    # Init logging with Tensorboard
    writer = SummaryWriter(log_dir + name)

    for ep in range(epochs):
        optimizer.zero_grad()
        for batch_idx, (scan, seg, mask) in enumerate(subj_loader):
            # Metrics init
            y_pred = []
            y_true = []

            scan = scan.double().to(device)
            decoded_mu = torch.zeros(scan.size())

            # Get average prior
            for s in range(n_latent_samples):
                with torch.no_grad():
                    recon_batch, z_mean, z_cov, res = vae_model(scan)
                decoded_mu += np.array([1 * recon_batch[i].detach().cpu().numpy() for i in range(scan.size()[0])])

            decoded_mu = decoded_mu / n_latent_samples

            # Remove channel
            scan = scan.squeeze(1)
            seg = seg.squeeze(1)
            mask = mask.squeeze(1)

            if K_actf == 0:
                restored_batch, loss = train_run_map_implicit(scan, decoded_mu, net, vae_model, riter, step_size,
                                                              device, writer, seg, mask, K_actf=K_actf)
            else:
                restored_batch, loss = train_run_map_explicit(scan, decoded_mu, net, vae_model, riter, step_size,
                                                              device, writer, seg, mask, K_actf=K_actf)

            optimizer.step()
            optimizer.zero_grad()

            writer.add_scalar('Loss', loss)

            seg = seg.cpu().detach().numpy()
            mask = mask.cpu().detach().numpy()
            # Predicted abnormalty is difference between restored and original batch
            error_batch = np.zeros([scan.size()[0],original_size,original_size])
            restored_batch_resized = np.zeros([scan.size()[0],original_size,original_size])

            for idx in range(scan.size()[0]): # Iterate trough for resize
                error_batch[idx] = resize(abs(scan[idx] - restored_batch[idx]).cpu().detach().numpy(), (200,200))
                restored_batch_resized[idx] = resize(restored_batch[idx].cpu().detach().numpy(), (200,200))

            # Remove preds and seg outside mask and flatten
            mask = resize(mask, (scan.size()[0], original_size, original_size))
            seg = resize(seg, (scan.size()[0], original_size, original_size))

            error_batch_m = error_batch[mask > 0].ravel()
            seg_m = seg[mask > 0].ravel().astype(bool)

            # AUC
            y_pred.extend(error_batch_m.tolist())
            y_true.extend(seg_m.tolist())
            if not all(element==0 for element in y_true):
                AUC = roc_auc_score(y_true, y_pred)

            print('AUC : ', AUC)
            writer.add_scalar('AUC:', AUC, ep)
            writer.flush()

        ## VALIDATION
        if validation and ep % 5 == 0:

            for batch_idx, (scan, seg, mask) in enumerate(valid_subj_loader):
                # Metrics init
                valid_y_pred = []
                valid_y_true = []

                scan = scan.double().to(device)
                decoded_mu = torch.zeros(scan.size())

                # Get average prior
                for s in range(n_latent_samples):
                    with torch.no_grad():
                        recon_batch, z_mean, z_cov, res = vae_model(scan)
                    decoded_mu += np.array(
                        [1 * recon_batch[i].detach().cpu().numpy() for i in range(scan.size()[0])])

                decoded_mu = decoded_mu / n_latent_samples

                # Remove channel
                scan = scan.squeeze(1)
                seg = seg.squeeze(1)
                mask = mask.squeeze(1)

                if K_actf == 0:
                    restored_batch, loss = train_run_map_implicit(scan, decoded_mu, net, vae_model, riter, step_size,
                                                                  device, writer, seg, mask, aug=False,)
                else:
                    restored_batch, loss = train_run_map_explicit(scan, decoded_mu, net, vae_model, riter, step_size,
                                                                  device, writer, seg, mask, aug=False, K_actf=K_actf)
                optimizer.zero_grad()

                valid_writer.add_scalar('Loss', loss)

                seg = seg.cpu().detach().numpy()
                mask = mask.cpu().detach().numpy()
                # Predicted abnormalty is difference between restored and original batch
                error_batch = np.zeros([scan.size()[0], original_size, original_size])
                restored_batch_resized = np.zeros([scan.size()[0], original_size, original_size])

                for idx in range(scan.size()[0]):  # Iterate trough for resize
                    error_batch[idx] = resize(abs(scan[idx] - restored_batch[idx]).cpu().detach().numpy(),
                                              (200, 200))
                    restored_batch_resized[idx] = resize(restored_batch[idx].cpu().detach().numpy(), (200, 200))

                # Remove preds and seg outside mask and flatten
                mask = resize(mask, (scan.size()[0], original_size, original_size))
                seg = resize(seg, (scan.size()[0], original_size, original_size))

                error_batch_m = error_batch[mask > 0].ravel()
                seg_m = seg[mask > 0].ravel().astype(bool)

                # AUC
                valid_y_pred.extend(error_batch_m.tolist())
                valid_y_true.extend(seg_m.tolist())
                if not all(element == 0 for element in valid_y_true):
                    AUC = roc_auc_score(valid_y_true, valid_y_pred)

                print('Valid AUC : ', AUC)
                valid_writer.add_scalar('AUC:', AUC, ep)
                valid_writer.flush()

        if ep % log_freq == 0:
            # Save model
            path = '/scratch_net/biwidl214/jonatank/logs/restore/' + name + str(ep) + '.pth'
            torch.save(net, path)
