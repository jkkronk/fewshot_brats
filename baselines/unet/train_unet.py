__author__ = 'jonatank'
import sys
sys.path.insert(0, '/scratch_net/biwidl214/jonatank/code_home/restor_MAP/')

import torch
import torch.utils.data as data
import torch.optim as optim
from torch.utils.tensorboard import SummaryWriter

from models.unet import UNET, train_unet, valid_unet
import argparse
import yaml
import pickle
import numpy as np
import random

from datasets import brats_dataset_subj

if __name__ == "__main__":
    # Params init
    parser = argparse.ArgumentParser()
    parser.add_argument('--model_name', type=str, default=0)
    parser.add_argument("--config", required=True, help="path to config")
    parser.add_argument("--subjs", type=float, help="Number of subjects for training")
    parser.add_argument("--aug", type=int)

    opt = parser.parse_args()
    model_name = opt.model_name
    subj_nbr = opt.subjs
    aug = bool(opt.aug)

    with open(opt.config) as f:
        config = yaml.safe_load(f)

    lr_rate = float(config['lr_rate'])
    data_path = config['path']
    epochs = config['epochs']
    batch_size = config["batch_size"]
    img_size = config["spatial_size"]
    log_freq = config['log_freq']
    log_dir = config['log_dir']
    log_model = config['model_dir']

    # Cuda
    device = torch.device("cuda:0" if torch.cuda.is_available() else "cpu")
    print('Using device: ' + str(device))
    print(model_name)
    # Load list of subjects
    #f = open(data_path + 'subj_t2_dict.pkl', 'rb')
    #subj_dict = pickle.load(f)
    #f.close()

    #subj_list_all = list(subj_dict.keys())
    #random.shuffle(subj_list_all)
    #subj_list = subj_list_all[:subj_nbr]
    #if subj_nbr == 1:
    #    subj_list = ['Brats17_CBICA_BFB_1_t2_unbiased.nii.gz']

    #print(subj_list)

    slices = [25346, 25359, 25365, 25335, 25243, 25342, 25250, 25296, 25309, 25350, 25288, 25319, 25378, 25276, 25265,
             25264, 25324, 25337, 25271, 25366, 25300, 25244, 25260, 25245, 25339, 25375, 25311, 25313, 25290, 25357,
             25343, 25347, 25322, 25256, 25328, 25340, 25331, 25374, 25345, 25285, 25323, 25316, 25349, 25252, 25351,
             25364, 25317, 25330, 25239, 25240, 25314, 25332, 25280, 25344, 25301, 25286, 25363, 25302, 25274, 25315,
             25255, 25368, 25321, 25292, 25373, 25241, 25293, 25238, 25270, 25253, 25305, 25320, 25371, 25272, 25353,
             25247, 25333, 25304, 25254, 25278, 25279, 25299, 25277, 25294, 25369, 25297, 25251, 25361, 25283, 25303,
             25336, 25248, 25356, 25258, 25263, 25257, 25275, 25259, 25307, 25282, 25318, 25327, 25370, 25354, 25325,
             25358, 25376, 25262, 25269, 25291, 25266, 25237, 25329, 25362, 25312, 25242, 25341, 25355, 25360, 25268]
    # 1 Subject
        # 0 [25346, 25359, 25365, 25335, 25243, 25342, 25250, 25296, 25309, 25350, 25288, 25319, 25378, 25276, 25265, 25264, 25324, 25337, 25271, 25366, 25300, 25244, 25260, 25245, 25339, 25375, 25311, 25313, 25290, 25357,
        #              25343, 25347, 25322, 25256, 25328, 25340, 25331, 25374, 25345, 25285, 25323, 25316, 25349, 25252, 25351,
        #              25364, 25317, 25330, 25239, 25240, 25314, 25332, 25280, 25344, 25301, 25286, 25363, 25302, 25274, 25315,
        #              25255, 25368, 25321, 25292, 25373, 25241, 25293, 25238, 25270, 25253, 25305, 25320, 25371, 25272, 25353,
        #              25247, 25333, 25304, 25254, 25278, 25279, 25299, 25277, 25294, 25369, 25297, 25251, 25361, 25283, 25303,
        #              25336, 25248, 25356, 25258, 25263, 25257, 25275, 25259, 25307, 25282, 25318, 25327, 25370, 25354, 25325,
        #              25358, 25376, 25262, 25269, 25291, 25266, 25237, 25329, 25362, 25312, 25242, 25341, 25355, 25360, 25268]
        # 1
        # 2
        # 3
        # 4

    # 3 Subjects
        # 0 [7997, 16541, 1332, 16497, 16573, 8005, 1325, 8003, 16517, 16453, 16455, 7953, 7968, 7946, 1283, 1198, 16530, 16485, 1309, 1291, 1324, 1274, 7927, 7976, 7947, 7949, 7995, 1255, 1252, 1273, 16513, 8029, 1225, 1308, 16534, 16545, 7942, 16498, 8017, 1293, 1268, 1319, 8010, 8009, 7998, 16568, 16459, 16509, 1231, 7975, 16553, 16544, 8018, 1208, 1276, 7922, 1218, 1298, 16558, 1264, 16578, 1280, 8034, 1244, 1340, 16501, 7921, 16500, 1317, 16457, 1299, 7918, 1270, 16475, 7954, 16467, 16488, 16559, 1302, 16522, 1292, 16540, 8006, 16552, 8025, 1212, 1236, 1290, 8023, 1214, 16587, 16584, 1224, 1281, 7971, 16458, 1303, 8033, 1338, 1199, 7979, 7957, 1222, 16529, 16538, 1259, 1334, 16577, 1248, 8036, 16464, 7935, 16491, 16555, 16472, 1311, 7945, 1210, 1245, 16556, 16531, 1300, 8030, 16520, 1221, 7988, 1265, 16492, 16482, 8008, 16535, 16518, 16557, 1220, 1277, 16516, 16560, 16493, 7931, 7978, 1323, 8050, 16585, 7933, 7928, 8044, 1257, 8037, 1202, 16470, 1314, 1312, 16499, 8042, 16474, 8035, 16572, 7929, 7943, 8038, 16549, 7966, 8012, 7993, 8046, 7967, 1239, 16496, 16466, 8019, 8026, 16460, 1279, 8040, 16566, 7932, 16523, 1336, 1330, 16503, 1297, 1284, 7952, 7996, 16583, 7989, 1313, 1339, 7930, 16471, 1219, 1203, 1263, 16473, 1256, 1278, 1295, 1235, 1250, 16525, 8028, 16478, 1331, 7982, 1260, 7973, 7924, 1233, 1285, 1262, 16512, 16543, 16521, 16582, 1269, 1205, 16502, 16537, 8049, 8000, 16465, 1200, 1271, 7917, 16563, 1289, 1228, 7964, 7985, 1215, 16514, 16567, 7923, 8020, 8001, 7983, 1253, 1261, 16480, 16469, 16524, 7925, 16564, 7984, 1335, 8014, 7938, 7941, 1304, 8004, 1251, 1254, 8015, 1272, 7936, 7959, 16486, 16547, 1296, 7960, 8007, 1247, 1310, 7956, 16484, 1294, 1275, 7950, 16468, 1237, 1320, 8052, 1328, 1223, 16519, 8045, 1211, 8051, 16551, 16483, 1315, 16526, 1201, 16454, 7991, 16546, 1301, 1306, 7944, 1197, 16536, 1241, 1329, 16507, 1227, 8002, 7920, 7981, 7992, 1326, 8011, 8048, 7939, 7999, 1322, 16586, 1234, 16489, 16528, 1316, 16505, 7948, 1341, 1217, 1207, 1318, 16479, 1238, 16490, 8039, 1286, 8013, 8027, 16463, 16548, 1287, 1266, 7970, 1230, 8024, 16495, 16554, 16550, 16481, 7987, 1267, 16565, 16569, 7937, 16515, 7965, 16539, 7934, 1216, 1213, 7977, 8032, 16476, 7958, 8047, 16561, 7963, 1209, 16574]
        # 1 [16693, 17077, 11643, 16632, 11711, 16998, 17078, 16979, 16637, 17009, 17016, 16711, 16665, 11705, 16708, 17037, 17002, 11681, 11726, 11721, 16627, 11660, 11615, 16987, 11600, 16691, 16609, 16697, 16630, 16616, 16591, 17001, 16701, 16629, 17014, 16680, 17025, 17058, 11679, 11603, 17073, 17013, 16606, 16664, 11733, 11614, 17036, 16643, 16976, 11624, 16698, 11654, 16657, 11632, 16620, 17035, 11611, 17068, 16671, 16589, 11651, 11646, 11648, 17007, 16997, 11629, 11634, 16628, 17056, 16700, 11663, 16605, 16639, 16705, 11602, 11609, 16614, 11658, 16681, 16621, 11700, 16596, 17008, 11692, 11631, 11727, 16714, 16646, 11677, 11649, 17052, 11729, 11671, 11687, 11605, 16692, 17040, 11710, 11672, 11703, 17070, 17054, 16593, 16625, 16981, 16592, 11695, 17067, 17076, 11688, 11713, 17015, 17074, 17100, 16996, 16988, 16635, 16653, 16624, 17057, 11690, 17098, 11701, 17010, 17026, 11642, 16655, 16602, 16703, 11708, 16658, 17088, 11636, 11689, 11657, 16590, 17000, 17082, 11662, 11718, 16683, 17043, 16618, 11638, 16652, 11730, 16983, 17023, 17034, 11719, 11647, 16675, 16626, 17047, 16597, 16607, 11685, 16669, 11617, 11709, 17046, 11735, 17069, 16604, 11627, 16666, 16677, 16672, 11633, 16710, 11621, 17083, 11622, 17062, 16706, 16651, 11616, 16649, 16984, 17064, 11665, 17018, 11606, 16636, 16670, 17028, 16638, 17061, 11717, 16662, 16633, 16713, 16994, 16640, 11728, 17102, 11702, 11612, 11625, 16985, 17019, 17006, 16707, 11723, 16641, 16644, 17003, 11673, 11731, 11659, 11699, 11650, 17012, 11732, 17065, 17096, 16611, 16694, 11686, 17094, 11637, 11725, 17092, 16656, 17044, 11712, 17104, 17029, 16699, 11669, 11715, 17042, 17050, 11620, 16704, 11664, 16647, 11618, 17027, 11640, 11694, 17020, 11716, 16989, 16594, 11635, 16601, 11661, 16600, 16623, 11734, 11697, 17039, 17071, 11655, 11623, 17051, 17103, 16709, 17060, 16610, 11724, 16617, 11644, 16661, 17093, 11704, 17059, 11684, 11674, 17075, 16663, 17021, 17066, 16684, 16990, 11696, 17030, 16978, 16673, 17048, 16991, 16974, 16690, 16622, 16645, 11599, 16685, 17084, 11676, 17087, 11698, 11722, 17053, 16975, 16995, 16608, 17031, 16687, 11680, 17090, 11604, 11652, 16702, 16603, 17005, 17097, 16696, 17049, 11682, 16659, 11610, 17072, 17024, 11706, 16980, 17011, 11608, 11653, 16642, 16613, 16634, 17081, 16599, 11619, 16678, 16679, 16676, 16668, 16712, 17086, 16619, 11720, 16682, 11626]
        # 2 [24374, 14975, 15000, 24379, 15028, 15020, 24415, 15090, 2999, 24362, 24321, 2988, 14991, 24407, 15093, 3060, 15080, 3017, 24341, 24394, 3002, 15036, 14996, 24409, 24287, 15094, 15044, 24350, 24301, 24406, 15086, 3008, 15062, 15029, 15060, 3063, 3014, 24356, 24285, 14999, 24366, 24304, 3075, 24397, 2959, 15021, 24383, 15042, 3042, 24389, 3029, 3016, 24294, 3018, 15001, 14972, 24398, 24387, 3033, 3039, 3056, 2973, 3038, 15067, 15058, 24295, 2976, 24328, 3046, 24346, 2950, 24336, 3043, 14983, 24381, 14979, 24401, 15077, 15013, 15010, 2995, 15019, 2975, 3031, 24326, 3058, 24363, 24351, 24335, 24418, 24305, 2956, 2960, 15057, 15079, 15031, 3051, 15054, 15043, 14989, 14981, 24325, 15071, 3023, 15059, 24309, 3005, 24327, 24352, 15005, 14986, 3011, 15016, 15048, 24368, 24355, 15007, 3034, 14971, 15061, 24293, 2943, 15034, 24391, 15033, 2984, 3068, 24322, 2998, 24392, 24372, 15053, 24333, 24297, 24384, 15039, 24317, 15025, 3040, 3049, 15068, 15087, 15002, 24334, 24360, 15051, 24388, 2939, 15040, 15006, 3026, 24342, 24324, 24298, 24349, 3000, 24302, 14987, 24369, 3001, 2966, 3009, 3015, 2969, 14997, 15004, 3036, 14976, 3004, 3057, 2970, 14998, 14980, 15037, 24357, 24412, 24343, 24390, 24331, 24308, 24338, 24320, 24340, 3061, 14970, 24291, 15083, 24410, 15023, 2983, 24414, 3035, 3003, 15035, 2991, 3055, 15011, 24411, 2945, 2958, 24373, 3037, 24344, 3006, 24375, 3021, 24420, 15064, 3067, 24399, 14978, 3069, 2948, 2971, 24314, 2963, 2954, 2957, 24307, 24385, 15097, 24319, 3030, 2993, 3053, 2974, 24377, 24365, 24403, 24284, 2951, 2996, 2965, 15095, 15089, 2938, 15049, 3028, 3052, 24311, 24359, 14990, 3007, 3025, 2987, 15017, 3073, 15078, 15091, 24419, 15072, 2967, 24408, 24361, 3050, 24310, 15024, 2964, 15038, 24330, 2949, 24416, 24370, 15069, 15030, 2962, 14985, 24400, 2989, 24354, 24378, 14974, 3027, 24290, 24289, 15081, 3019, 2986, 3047, 24318, 3048, 24313, 2981, 2985, 24323, 24303, 2980, 3022, 3076, 3024, 15052, 15045, 15075, 3032, 15073, 24417, 3041, 15066, 24371, 14982, 24329, 24288, 2992, 24393, 3059, 3044, 15015, 2955, 14995, 24296, 3070, 3077, 15027, 2952, 15003, 24300, 15082, 24316, 2942, 15050, 24312, 24332, 24337, 14977, 15084, 24382, 15046, 24348, 24404, 15056, 3010, 24306, 15076, 15032, 3065, 14994, 15008, 2968, 2982, 3013, 3020, 15065, 24413, 24395, 3012, 15098, 2978]
        # 3 [559, 623, 19401, 19469, 600, 10202, 19506, 10107, 546, 10092, 10097, 10223, 10123, 10193, 10206, 19399, 10180, 10140, 10175, 19463, 19427, 10096, 576, 10203, 10126, 10152, 598, 10222, 19507, 628, 542, 19429, 10155, 672, 19422, 10210, 10166, 10176, 10191, 10172, 582, 638, 568, 631, 663, 19500, 10125, 19426, 536, 10122, 10095, 635, 19424, 538, 19516, 19483, 19437, 10156, 19445, 10213, 19502, 606, 566, 585, 10171, 674, 19470, 10124, 19423, 19433, 19468, 567, 556, 558, 10184, 547, 19442, 578, 10154, 10112, 661, 594, 19504, 10151, 590, 10118, 19459, 10093, 19414, 19418, 617, 19467, 10192, 592, 10129, 19412, 19435, 10127, 10098, 10197, 570, 548, 19503, 10214, 19439, 19480, 19397, 591, 651, 19415, 19478, 10091, 561, 641, 572, 19453, 10103, 19416, 655, 19513, 19472, 664, 19434, 574, 19406, 10215, 10137, 653, 19438, 544, 10130, 622, 643, 539, 19417, 626, 662, 10209, 612, 19395, 10187, 19473, 10207, 10190, 10090, 10221, 10121, 10128, 19496, 670, 10218, 10160, 603, 624, 646, 19490, 613, 637, 10115, 19413, 19521, 640, 10220, 608, 10201, 10185, 669, 10142, 10163, 580, 10196, 550, 629, 10139, 540, 19515, 610, 19407, 19488, 654, 611, 10164, 602, 10087, 10134, 537, 19430, 19451, 10132, 19484, 597, 583, 10104, 650, 552, 10181, 19519, 555, 19494, 19428, 10131, 10204, 19405, 19476, 19475, 19393, 19420, 10116, 10216, 19425, 19499, 10136, 10094, 19465, 675, 596, 10113, 19523, 19409, 10183, 632, 19419, 557, 10182, 607, 615, 19495, 19431, 19486, 584, 19447, 10158, 581, 549, 551, 614, 639, 19482, 10170, 10157, 19501, 656, 19403, 19485, 19456, 10146, 19489, 19511, 19446, 19421, 10111, 19440, 10219, 601, 10167, 10141, 10100, 673, 10162, 19398, 19527, 627, 658, 587, 19400, 660, 19522, 10150, 586, 657, 647, 10194, 619, 10174, 19528, 10195, 19462, 671, 630, 667, 19493, 19509, 19526, 10148, 621, 19461, 564, 10211, 19432, 19452, 10200, 577, 565, 10145, 19514, 10138, 665, 19466, 636, 659, 19520, 579, 19492, 609, 19512, 19411, 10099, 10165, 19450, 605, 10212, 10147, 10101, 571, 19471, 10143, 633, 10110, 19518, 10135, 10108, 10205, 573, 19464, 10173, 10089, 10105, 652, 10189, 19392, 554, 10133, 19449, 666, 616, 19436, 575, 10102, 588, 10153, 19444, 19410, 10217, 10109, 10106, 10120, 10088, 19443, 562, 543, 545, 10179]
        # 4 [20235, 12640, 12672, 12635, 26443, 12617, 20315, 20220, 20227, 20332, 12592, 26463, 26370, 20299, 26399, 20261, 26355, 12662, 26377, 20311, 26344, 20266, 26351, 26413, 26420, 26437, 12647, 20259, 20272, 26403, 26440, 20269, 12650, 26375, 20286, 12538, 26459, 12601, 12638, 20337, 26356, 20233, 20280, 12658, 26361, 26460, 12649, 12534, 26432, 12593, 20314, 12661, 20238, 26425, 20351, 12555, 26362, 26350, 12558, 20221, 12619, 20346, 12544, 20223, 12636, 20338, 12609, 26382, 12624, 20245, 20354, 20241, 26414, 26468, 20349, 20228, 12666, 12570, 20260, 26447, 20285, 12535, 20219, 12569, 26395, 12602, 26406, 26458, 12663, 12651, 12552, 26393, 20253, 20275, 12568, 20226, 20278, 20300, 12669, 12545, 26394, 20255, 12582, 26373, 12596, 12543, 20306, 20313, 26461, 26397, 12597, 12536, 26364, 20240, 12577, 12547, 20339, 20329, 26398, 26470, 12637, 12533, 12613, 26409, 20288, 20323, 26469, 26431, 26352, 20355, 26457, 12610, 20319, 26380, 20357, 20331, 26371, 20296, 20318, 12630, 26445, 12604, 26410, 12625, 26368, 26389, 20251, 26400, 12542, 26396, 26372, 26428, 20320, 26456, 12643, 26418, 20307, 20356, 20304, 12562, 12664, 20341, 26467, 12656, 12654, 20277, 20270, 12605, 26446, 20308, 20333, 12645, 12633, 12671, 12616, 26415, 12572, 20328, 20350, 12571, 26391, 12623, 12557, 20236, 20334, 12648, 26444, 26392, 26427, 20324, 12615, 12561, 12556, 12541, 20343, 12665, 26343, 20268, 26347, 20298, 12600, 26336, 20289, 12627, 20322, 20309, 26434, 20222, 20310, 26335, 26341, 20234, 26435, 20336, 26337, 26448, 12564, 26390, 12646, 26353, 20335, 20257, 12579, 26466, 26424, 26363, 20345, 26449, 12611, 26404, 12606, 26454, 20237, 20344, 26379, 12580, 20283, 20264, 20246, 12621, 12589, 12574, 26401, 12632, 26378, 12590, 20250, 26451, 20290, 12657, 12644, 20294, 26357, 20348, 12578, 20292, 12668, 12642, 20230, 12599, 26354, 26438, 20254, 12575, 20281, 26408, 26345, 26338, 12673, 20282, 20353, 20263, 12581, 26450, 12584, 12631, 20249, 12591, 12551, 12618, 20232, 26374, 20302, 20252, 12620, 20218, 26411, 12634, 20305, 20274, 12540, 20231, 12639, 12563, 20352, 12655, 20287, 12586, 20342, 26365, 12667, 12560, 20303, 20347, 26348, 20291, 20293, 26442, 26423, 26426, 26430, 26436, 12539, 26340, 12622, 26386, 12585, 26360, 20225, 12595, 12598, 26433, 20258, 20248, 26381, 20265, 12566, 20242, 20262, 26416, 20295, 26367, 26359, 26412, 26422, 26339, 12553, 26429, 12550, 26346, 26407, 12537, 12549, 20317, 26369, 12629, 20273, 12559, 12660, 26366, 20330, 12583, 26439, 12567]
        # 5 [1611, 13026, 12977, 13029, 12625, 13019, 13085, 12545, 1723, 13045, 1696, 12634, 12673, 1684, 1690, 1653, 12995, 12535, 13062, 13089, 13079, 1699, 12971, 1677, 12998, 12613, 1628, 12609, 1652, 13046, 12616, 12604, 13056, 12643, 12978, 1735, 12565, 1672, 13065, 13058, 1620, 12599, 1664, 1736, 12591, 1704, 12610, 13009, 13037, 1681, 1651, 12602, 1728, 1627, 12641, 13074, 1633, 13075, 12647, 1643, 13039, 1697, 13020, 13005, 1744, 12537, 12636, 1676, 1717, 12574, 12542, 12973, 12562, 1635, 12617, 1701, 12631, 12605, 1724, 1655, 12550, 1706, 12970, 1693, 1729, 12954, 1683, 12534, 13008, 12666, 13071, 12642, 12598, 1670, 13057, 12662, 13025, 13040, 12648, 12568, 1713, 13059, 12620, 1675, 12571, 13069, 13049, 12671, 1687, 1716, 12659, 12630, 12994, 12999, 12661, 12988, 12553, 12608, 12963, 12670, 12584, 12577, 12586, 1712, 12587, 1679, 12556, 1732, 12957, 1644, 13012, 1710, 1645, 1741, 12976, 1715, 12614, 13000, 1654, 12979, 1700, 12667, 12635, 13082, 13054, 13048, 1702, 12582, 12536, 12590, 12985, 12959, 1719, 12645, 1686, 1656, 13084, 13002, 12575, 12656, 13042, 12953, 1711, 1726, 1665, 1682, 13061, 1678, 13088, 1685, 1649, 12564, 13064, 1631, 13017, 12967, 12660, 12600, 12595, 1718, 13086, 1714, 12638, 12653, 1733, 1705, 12618, 12597, 1740, 13087, 1661, 1621, 1640, 1617, 1707, 13018, 12982, 1632, 12960, 13067, 1646, 12544, 12623, 1666, 1623, 12606, 13073, 12559, 1668, 12955, 12538, 13004, 12639, 12570, 13041, 13038, 12640, 12644, 12593, 1709, 13063, 12992, 13035, 12547, 12989, 12972, 12569, 1698, 12546, 1742, 12557, 1636, 13022, 12540, 1734, 1659, 12580, 1746, 13027, 13011, 13021, 13044, 13072, 13033, 13077, 1609, 13013, 13028, 12637, 12669, 1695, 12657, 12956, 12663, 1626, 1692, 13051, 1630, 12589, 12965, 12555, 13032, 12672, 1671, 12650, 12990, 12624, 13023, 12603, 1673, 13047, 1624, 1657, 12541, 13055, 12601, 12539, 1727, 12974, 12627, 12543, 1738, 1745, 13015, 12561, 13014, 12563, 1725, 12578, 1730, 12651, 12633, 12993, 1691, 1638, 1662, 13078, 12622, 12969, 12581, 1615, 1689, 12996, 13043, 12649, 1680, 12629, 1674, 12968, 12612, 12997, 1694, 1688, 12984, 12549, 13076, 1650, 13050, 1731, 13031, 12615, 1667, 12626, 1720, 1737, 1629, 12652, 12665, 12986, 13016, 12632, 13006, 13066, 1669, 12573, 1739, 1658, 1634, 12554, 12987, 12588, 12576, 13036, 12962, 12983, 13052, 12981, 1721, 12533, 12980, 13068, 12961, 1613]

    #slices = []
    #for subj in subj_list:  # Iterate every subject
    #    slices.extend(subj_dict[subj])  # Slices for each subject

    # Load data
    subj_dataset = brats_dataset_subj(data_path, 'train', img_size, slices, use_aug=True)
    subj_loader = data.DataLoader(subj_dataset, batch_size=batch_size, shuffle=True, num_workers=3)
    print(' Number of Slices: ', subj_dataset.size)

    # Load list of validation subjects
    f = open(data_path + 'subj_t2_valid_dict.pkl', 'rb')
    val_subj_dict = pickle.load(f)
    f.close()

    #val_subj_list_all = list(val_subj_dict.keys())
    # if subj_nbr == 1:
    #    subj_list = ['Brats17_CBICA_BFB_1_t2_unbiased.nii.gz']

    #print(val_subj_list_all)

    #slices = []
    #for subj in val_subj_list_all:  # Iterate every subject
    #    slices.extend(val_subj_dict[subj])  # Slices for each subject
    slices = [25348, 25367, 25310, 25352, 25246, 25284, 25261, 25298, 25267, 25289, 25338, 25273, 25287, 25334, 25295,
             25372, 25281, 25249, 25377, 25326, 25308, 25306]

    # 1 subject
        # 0 [25348, 25367, 25310, 25352, 25246, 25284, 25261, 25298, 25267, 25289, 25338, 25273, 25287, 25334, 25295, 25372, 25281, 25249, 25377, 25326, 25308, 25306]


    # 3 subjects
        # 0 [8016, 7919, 1242, 7974, 7972, 16508, 8022, 1327, 7962, 7951, 7961, 7926, 16477, 1243, 7980, 1321, 1282, 16504, 1229, 7969, 8041, 7955, 8021, 1206, 16570, 16456, 1288, 16576, 16461, 1307, 7994, 16506, 1226, 16542, 7990, 16579, 1240, 1333, 1337, 1204, 16487, 16510, 16571, 16562, 16511, 16494, 8043, 16532, 1305, 1258, 1232, 1249, 16575, 8053, 16581, 8031, 16462, 16527, 7986, 16580, 16533, 1246, 7940]
        # 1 [16648, 11641, 17038, 16612, 11601, 16993, 11628, 17079, 17099, 11645, 17063, 16654, 11666, 11707, 11613, 11678, 11670, 16977, 16688, 16674, 17004, 16982, 11668, 17080, 11683, 17041, 17101, 17085, 16695, 17095, 11639, 16588, 16686, 16660, 17045, 16615, 11691, 17022, 16992, 11630, 16650, 17032, 16689, 11675, 11714, 17055, 16667, 16631, 16986, 11607, 16595, 11656, 17033, 16598, 16999, 17091, 17089, 11693, 17017, 11667]
        # 2 [15063, 24386, 24315, 15070, 2990, 15074, 24347, 2941, 3054, 15022, 24421, 24339, 14973, 24402, 15055, 14992, 3072, 15026, 2994, 15018, 3071, 3064, 15041, 24396, 2947, 14984, 24405, 24286, 24283, 14993, 24367, 3062, 24345, 24353, 2997, 2946, 2953, 3045, 15088, 24292, 24358, 14969, 3074, 15009, 24364, 2940, 2961, 24380, 3066, 15096, 15092, 2972, 2979, 14988, 2944, 24376, 15085, 2977, 24299, 15047, 15014, 15012]
        # 3 [553, 560, 19404, 541, 634, 10117, 648, 10159, 19458, 19474, 10149, 10186, 618, 19402, 10114, 644, 19491, 19391, 19441, 19455, 19477, 642, 19510, 19408, 620, 569, 668, 19517, 593, 10177, 10208, 19498, 19396, 10198, 599, 10178, 10199, 645, 604, 10119, 19481, 19525, 10144, 19508, 595, 649, 10161, 19487, 19457, 19524, 589, 19394, 19448, 19454, 10169, 625, 19497, 19505, 19460, 10168, 19479, 10188, 563]
        # 4 [20224, 20244, 20276, 20301, 20316, 12576, 12588, 12573, 26417, 20325, 20340, 26349, 26405, 12652, 20284, 20297, 26453, 26384, 26421, 26387, 20326, 20279, 20327, 12548, 12587, 12612, 12554, 20321, 12659, 20271, 26419, 26342, 12603, 12614, 26358, 26402, 12626, 26462, 12608, 26455, 12628, 26383, 20229, 12607, 26452, 20312, 20243, 26385, 26376, 12565, 12670, 12641, 12546, 20267, 12653, 20256, 26388, 12594, 20247, 26464, 26465, 26441, 20239]
        # 5 [13010, 12655, 12664, 12628, 12966, 13007, 12579, 12560, 1703, 1637, 12975, 13003, 12658, 12668, 13081, 1622, 12548, 13080, 12607, 12619, 1648, 13030, 1641, 12552, 13060, 1647, 1614, 13001, 12551, 12566, 12558, 1660, 13024, 12991, 1663, 1639, 1722, 12572, 12611, 12596, 1642, 1612, 1743, 12567, 1619, 13083, 1616, 12654, 1610, 13034, 1625, 13053, 13070, 1618, 12592, 12964, 12958, 12585, 12594, 12621, 1708, 12646, 12583]

    # Load validation data
    val_subj_dataset = brats_dataset_subj(data_path, 'train', img_size, slices, use_aug=False)
    val_subj_loader = data.DataLoader(subj_dataset, batch_size=batch_size, shuffle=True, num_workers=3)
    print(' Number of Slices: ', subj_dataset.size)

    # Create unet
    model = UNET(model_name, 1,1,16).to(device)

    # Create optimizer and scheduler
    optimizer = optim.Adam(model.parameters(), lr=lr_rate)

    # Tensorboard Init
    writer_train = SummaryWriter(log_dir + model.name + '_train')
    writer_valid = SummaryWriter(log_dir + model.name + '_valid')

    # Start training
    print('Start training:')
    for epoch in range(epochs):
        print('Epoch:', epoch)

        loss = train_unet(model, subj_loader, device, optimizer)
        loss_valid = valid_unet(model, val_subj_loader, device)

        writer_train.add_scalar('Loss',loss, epoch)
        writer_train.flush()
        writer_valid.add_scalar('Loss',loss_valid, epoch)
        writer_valid.flush()

        if epoch % log_freq == 0 and not epoch == 0:
            data_path = log_model + model_name + str(epoch) + '.pth'
            torch.save(model, data_path)